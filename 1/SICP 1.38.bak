#lang racket/base
(define n (lambda (x) 1.0))
(define (d x)

  (if (even? x)
      x
      1)

)

(define (f n d k)

  (cond (= k 0) (1)
        (even? k) (/ (n k)
                     (+ (d k) (f (n k) (d k) (- k 1))))
        (else (+ 1 (/ (n k)
                      (+ 1 (f (n (- k 1)) (d (- k 1)) (- k 1))))))
  
  )
  
    
)

(f n d 10)